from launch import LaunchDescription
from launch.actions import DeclareLaunchArgument
from launch.actions import ExecuteProcess
from launch.actions import OpaqueFunction
from launch.conditions import IfCondition
from launch.substitutions import LaunchConfiguration
from launch_ros.actions import Node

def generate_launch_description():
    # Declare the debug argument
    debug_arg = DeclareLaunchArgument(
        'debug',
        default_value='false',
        description='Launch node with GDB debugging')

    # Set up launch prefix based on the debug argument
    launch_prefix = LaunchConfiguration('launch_prefix')
    set_launch_prefix = OpaqueFunction(
        function=lambda context: [
            ExecuteProcess(
                cmd=['xterm', '-e', 'gdb', '--args'],
                condition=IfCondition(LaunchConfiguration('debug')),
                shell=True
            )]
    )

    # Define the node
    ackermann_to_vesc_node = Node(
        package='vesc_ackermann',
        executable='ackermann_to_vesc_node',
        name='ackermann_to_vesc_node',
        output='screen',
        prefix=[launch_prefix]
    )

    return LaunchDescription([
        debug_arg,
        set_launch_prefix,
        ackermann_to_vesc_node
    ])
