from launch import LaunchDescription
from launch.actions import DeclareLaunchArgument, SetEnvironmentVariable
from launch.conditions import IfCondition
from launch.substitutions import LaunchConfiguration
from launch_ros.actions import Node

def generate_launch_description():
    # Declare the launch arguments
    start_manager_arg = DeclareLaunchArgument(
        'start_manager',
        default_value='true',
        description='Whether to start the nodelet manager'
    )
    manager_arg = DeclareLaunchArgument(
        'manager',
        default_value='vesc_nodelet_manager',
        description='Name of the nodelet manager'
    )
    debug_arg = DeclareLaunchArgument(
        'debug',
        default_value='false',
        description='Launch node in GDB debugging mode'
    )
    launch_prefix_arg = DeclareLaunchArgument(
        'launch_prefix',
        default_value='',
        description='Launch prefix for debugging',
        condition=IfCondition(LaunchConfiguration('debug'))
    )
    num_worker_threads_arg = DeclareLaunchArgument(
        'num_worker_threads',
        default_value='4',
        description='Number of worker threads for the nodelet manager'
    )

    # Set the environment variable to disable bond heartbeat timeout in debug mode
    bond_disable_heartbeat = SetEnvironmentVariable(
        name='bond_disable_heartbeat_timeout',
        value='true',
        condition=IfCondition(LaunchConfiguration('debug'))
    )

    # Nodelet manager (only starts if start_manager is true)
    nodelet_manager = Node(
        package='nodelet',
        executable='nodelet',
        name=LaunchConfiguration('manager'),
        output='screen',
        arguments=['manager'],
        prefix=LaunchConfiguration('launch_prefix'),
        condition=IfCondition(LaunchConfiguration('start_manager')),
        parameters=[{'num_worker_threads': LaunchConfiguration('num_worker_threads')}]
    )

    # Ackermann to VESC nodelet
    ackermann_to_vesc_nodelet = Node(
        package='nodelet',
        executable='nodelet',
        name='ackermann_to_vesc_nodelet',
        output='screen',
        arguments=['load', 'vesc_ackermann::AckermannToVescNodelet', LaunchConfiguration('manager')]
    )

    # Launch description
    return LaunchDescription([
        start_manager_arg,
        manager_arg,
        debug_arg,
        launch_prefix_arg,
        num_worker_threads_arg,
        bond_disable_heartbeat,
        nodelet_manager,
        ackermann_to_vesc_nodelet
    ])
